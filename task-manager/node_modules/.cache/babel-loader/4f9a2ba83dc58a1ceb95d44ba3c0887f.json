{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genhk\\\\OneDrive\\\\Desktop\\\\ellie's\\\\20220118\\\\react-tasks-manager\\\\task-manager\\\\src\\\\Components\\\\TaskList\\\\TaskList(Refactor).js\";\n// import React\nimport React from \"react\"; // import stylesheet\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './TaskList.css'; // import task component\n// import Task from '../Task/Task';\n\nimport Task from '../Task/Task(Refactor)';\nimport { SimpleUncontrolledExample } from '../Pane/Pane';\nimport { SortablePane, Pane } from 'react-sortable-pane';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskList(_ref) {\n  let {\n    allTasks\n  } = _ref;\n  const panes = [allTasks].map(key => /*#__PURE__*/_jsxDEV(Pane, {\n    style: {\n      backgroungColor: 'red'\n    },\n    defaultSize: {\n      width: '100%',\n      height: 120\n    },\n    children: [\"00\", key]\n  }, key, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(SortablePane, {\n      direction: \"vertical\",\n      margin: 20,\n      defaultOrder: ['0', '1', '2'],\n      children: panes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this) // <div className=\"row h-100\">\n  //     <div className=\"col\">\n  //         {/* <!-- Start of upper part: Title --> */}\n  //         <div className=\"row border-bottom title-row\">\n  //             <div className=\"col\">\n  //                 <h3 className=\"mb-0 mt-2 title\">\n  //                     ALL TASKS\n  //                 </h3>\n  //             </div>\n  //         </div>\n  //         {/* <!-- End of upper part: Title --> */}\n  //         {/* <!-- Start of lower part: List --> */}\n  //         <div className=\"row\">\n  //             <div className=\"btnClass\">\n  //                 <div className=\"dropdown\">\n  //                     <button className=\"dropbtn  fas fa-chevron-down\">SORT BY</button>\n  //                     <div className=\"dropdown-content\">\n  //                         <a href=\"#\">A-Z</a>\n  //                         <a href=\"#\">Z-A</a>\n  //                     </div>\n  //                 </div>\n  //                 <div className=\"remove\">\n  //                     <button className=\"removebtn\">REMOVE DONE</button>\n  //                 </div>\n  //             </div>\n  //             {/* <!-- Start of main column --> */}\n  //             <div className=\"col mt-4 main-column\">\n  //                 {/* <!-- Start of the list --> */}\n  //                 <ul className=\"list-group list-group-flush w-100\">\n  //                     {/* <!-- Task Item(s) --> */}\n  //                     {/* {allTasks.map(task => <li className=\"list-group-item\"><Task task={task}/></li>)} */}\n  //                     {allTasks.map(task => <li className=\"list-group-item\" key={task.id}><Task task={task} /></li>)}\n  //                 </ul>\n  //             </div>\n  //         </div>\n  //     </div>\n  // </div>\n  ;\n} // export class TaskList extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.sortByAZ = this.sortByAZ.bind(this);\n//         this.sortByZA = this.sortByZA.bind(this);\n//     }\n//     sortByAZ(a, b) {\n//         if (a.text > b.text) {\n//             return 1;\n//         } else if (a.text == b.text) {\n//             return 0;\n//         } else {\n//             return -1;\n//         }\n//     }\n//     sortByZA(a, b) {\n//         if (a.text < b.text) {\n//             return 1;\n//         } else if (a.text == b.text) {\n//             return 0;\n//         } else {\n//             return -1;\n//         }\n//     }\n// }\n\n_c = TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"sources":["C:/Users/genhk/OneDrive/Desktop/ellie's/20220118/react-tasks-manager/task-manager/src/Components/TaskList/TaskList(Refactor).js"],"names":["React","Task","SimpleUncontrolledExample","SortablePane","Pane","TaskList","allTasks","panes","map","key","backgroungColor","width","height"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,sCAAP;AACA,OAAO,gBAAP,C,CAEA;AACA;;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,yBAAT,QAA0C,cAA1C;AACA,SAASC,YAAT,EAAuBC,IAAvB,QAAmC,qBAAnC;;AAGA,eAAe,SAASC,QAAT,OAAgC;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC3C,QAAMC,KAAK,GAAG,CAACD,QAAD,EAAWE,GAAX,CAAeC,GAAG,iBAC5B,QAAC,IAAD;AAAgB,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAE;AAAlB,KAAvB;AAAiD,IAAA,WAAW,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KAA9D;AAAA,qBACKH,GADL;AAAA,KAAWA,GAAX;AAAA;AAAA;AAAA;AAAA,UADU,CAAd;AAMA,sBACI;AAAA,2BACA,QAAC,YAAD;AAAc,MAAA,SAAS,EAAC,UAAxB;AAAmC,MAAA,MAAM,EAAE,EAA3C;AAA+C,MAAA,YAAY,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAA7D;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ,CAOI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CJ;AA6CH,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;KAhFwBF,Q","sourcesContent":["// import React\r\nimport React from \"react\";\r\n\r\n// import stylesheet\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './TaskList.css';\r\n\r\n// import task component\r\n// import Task from '../Task/Task';\r\nimport Task from '../Task/Task(Refactor)';\r\nimport { SimpleUncontrolledExample } from '../Pane/Pane'\r\nimport { SortablePane, Pane } from 'react-sortable-pane';\r\n\r\n\r\nexport default function TaskList({ allTasks }) {\r\n    const panes = [allTasks].map(key => (\r\n        <Pane key={key} style={{backgroungColor: 'red'}} defaultSize={{ width: '100%', height: 120 }}>\r\n          00{key}\r\n        </Pane>\r\n      ));\r\n\r\n    return (\r\n        <div>\r\n        <SortablePane direction=\"vertical\" margin={20} defaultOrder={['0', '1', '2']}>\r\n          {panes}\r\n        </SortablePane>\r\n      </div>\r\n  \r\n        // <div className=\"row h-100\">\r\n        //     <div className=\"col\">\r\n        //         {/* <!-- Start of upper part: Title --> */}\r\n        //         <div className=\"row border-bottom title-row\">\r\n        //             <div className=\"col\">\r\n        //                 <h3 className=\"mb-0 mt-2 title\">\r\n        //                     ALL TASKS\r\n        //                 </h3>\r\n        //             </div>\r\n        //         </div>\r\n        //         {/* <!-- End of upper part: Title --> */}\r\n        //         {/* <!-- Start of lower part: List --> */}\r\n        //         <div className=\"row\">\r\n        //             <div className=\"btnClass\">\r\n        //                 <div className=\"dropdown\">\r\n        //                     <button className=\"dropbtn  fas fa-chevron-down\">SORT BY</button>\r\n        //                     <div className=\"dropdown-content\">\r\n        //                         <a href=\"#\">A-Z</a>\r\n        //                         <a href=\"#\">Z-A</a>\r\n        //                     </div>\r\n        //                 </div>\r\n        //                 <div className=\"remove\">\r\n        //                     <button className=\"removebtn\">REMOVE DONE</button>\r\n        //                 </div>\r\n        //             </div>\r\n        //             {/* <!-- Start of main column --> */}\r\n        //             <div className=\"col mt-4 main-column\">\r\n        //                 {/* <!-- Start of the list --> */}\r\n        //                 <ul className=\"list-group list-group-flush w-100\">\r\n        //                     {/* <!-- Task Item(s) --> */}\r\n        //                     {/* {allTasks.map(task => <li className=\"list-group-item\"><Task task={task}/></li>)} */}\r\n        //                     {allTasks.map(task => <li className=\"list-group-item\" key={task.id}><Task task={task} /></li>)}\r\n        //                 </ul>\r\n        //             </div>\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n    )\r\n}\r\n\r\n\r\n// export class TaskList extends React.Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.sortByAZ = this.sortByAZ.bind(this);\r\n//         this.sortByZA = this.sortByZA.bind(this);\r\n//     }\r\n//     sortByAZ(a, b) {\r\n//         if (a.text > b.text) {\r\n//             return 1;\r\n//         } else if (a.text == b.text) {\r\n//             return 0;\r\n//         } else {\r\n//             return -1;\r\n//         }\r\n//     }\r\n//     sortByZA(a, b) {\r\n//         if (a.text < b.text) {\r\n//             return 1;\r\n//         } else if (a.text == b.text) {\r\n//             return 0;\r\n//         } else {\r\n//             return -1;\r\n//         }\r\n//     }\r\n\r\n// }"]},"metadata":{},"sourceType":"module"}