{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genhk\\\\OneDrive\\\\Desktop\\\\ellie's\\\\20220118\\\\react-tasks-manager\\\\task-manager\\\\src\\\\Components\\\\Task\\\\Task(Refactor).js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState } from 'react';\nimport './Task.css'; // const [button, setButton] = useState(true);\n// const [complete, setComplete] = useState(false);\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Task(_ref) {\n  _s();\n\n  let {\n    task\n  } = _ref;\n  const details = [];\n  const time = task.time;\n  const location = task.location;\n  const date = task.date;\n\n  if (date) {\n    details.push(date);\n  }\n\n  if (time) {\n    details.push(time);\n  }\n\n  if (location) {\n    details.push(location);\n  }\n\n  const [done, setDone] = useState(task.done);\n\n  const handleDone = () => {\n    setDone(!done);\n    console.log(done);\n  };\n\n  const [expand, setExpand] = useState(false);\n\n  const handleExpand = () => {\n    setExpand(!expand);\n  }; // const changeColor = () => {\n  //     setButton(!button)\n  // }\n  // const changeState = (event) => {\n  //     let value = event.target.value;\n  //     if (event.target.name === 'complete') {\n  //         value = event.target.checked\n  //     }\n  //     setComplete({ [event.target.name]: value })\n  // }\n  //state for changing bg color after tick(mark as done)\n  // const [color, setColor] = useState();\n  // const divStyle = { backgroundColor: color };\n  //state for expanding list when ... clicked for details\n  // const [expandList, setExpandList] = useState('auto');\n  // const containerHeight = {height: expandList};\n\n\n  const handleToggle = () => {\n    task.done = !task.done;\n    console.log(task.done);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row task-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mx-auto w-100 h-100\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: handleDone,\n            className: done ? 'fas fa-check buttonTrue' : 'fas fa-check buttonFalse'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-10 task-description\",\n        id: \"testing\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-secondary task-details\",\n            children: details.join(' â€§ ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: handleExpand,\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: expand ? 'noteShowTrue' : 'noteShowFalse',\n            children: task.note\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Task, \"YyFnCVJKf8cmmPiIDH8SCE1MFRM=\");\n\n_c = Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/genhk/OneDrive/Desktop/ellie's/20220118/react-tasks-manager/task-manager/src/Components/Task/Task(Refactor).js"],"names":["useState","Task","task","details","time","location","date","push","done","setDone","handleDone","console","log","expand","setExpand","handleExpand","handleToggle","title","join","note"],"mappings":";;;AAAA;AACA,OAAO,sCAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,YAAP,C,CAEA;AACA;;;AAEA,eAAe,SAASC,IAAT,OAAwB;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACnC,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,IAAI,GAAGF,IAAI,CAACE,IAAlB;AACA,QAAMC,QAAQ,GAAGH,IAAI,CAACG,QAAtB;AACA,QAAMC,IAAI,GAAGJ,IAAI,CAACI,IAAlB;;AACA,MAAIA,IAAJ,EAAU;AACNH,IAAAA,OAAO,CAACI,IAAR,CAAaD,IAAb;AACH;;AACD,MAAIF,IAAJ,EAAU;AACND,IAAAA,OAAO,CAACI,IAAR,CAAaH,IAAb;AACH;;AACD,MAAIC,QAAJ,EAAc;AACVF,IAAAA,OAAO,CAACI,IAAR,CAAaF,QAAb;AACH;;AAED,QAAM,CAAEG,IAAF,EAAQC,OAAR,IAAoBT,QAAQ,CAACE,IAAI,CAACM,IAAN,CAAlC;;AACA,QAAME,UAAU,GAAG,MAAM;AACrBD,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACH,GAHD;;AAKA,QAAM,CAAEK,MAAF,EAAUC,SAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMe,YAAY,GAAG,MAAM;AACvBD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,GAFD,CAtBmC,CAyBnC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGJ;AACI;AACA;AAEJ;AACI;AACA;;;AAEA,QAAMG,YAAY,GAAG,MAAM;AACvBd,IAAAA,IAAI,CAACM,IAAL,GAAY,CAACN,IAAI,CAACM,IAAlB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACM,IAAjB;AACH,GAHD;;AAIA,sBACI;AAAA,2BAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BAEI;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,iCAKQ;AAAG,YAAA,OAAO,EAAEE,UAAZ;AAAwB,YAAA,SAAS,EAAEF,IAAI,GAAG,yBAAH,GAA+B;AAAtE;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAkBI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAyC,QAAA,EAAE,EAAC,SAA5C;AAAA,gCAEI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCAGI;AAAA,sBACKN,IAAI,CAACe;AADV;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAWI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,6BAAb;AAAA,sBACKd,OAAO,CAACe,IAAR,CAAa,KAAb;AADL;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAG,YAAA,OAAO,EAAEH,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAG,YAAA,SAAS,EAAEF,MAAM,GAAG,cAAH,GAAoB,eAAxC;AAAA,sBAA0DX,IAAI,CAACiB;AAA/D;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA8CH;;GAhGuBlB,I;;KAAAA,I","sourcesContent":["// import React, { useState } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useState } from 'react';\r\nimport './Task.css'\r\n\r\n// const [button, setButton] = useState(true);\r\n// const [complete, setComplete] = useState(false);\r\n\r\nexport default function Task({ task }) {\r\n    const details = [];\r\n    const time = task.time\r\n    const location = task.location\r\n    const date = task.date\r\n    if (date) {\r\n        details.push(date)\r\n    }\r\n    if (time) {\r\n        details.push(time)\r\n    }\r\n    if (location) {\r\n        details.push(location)\r\n    }\r\n\r\n    const [ done, setDone ] = useState(task.done);\r\n    const handleDone = () => {\r\n        setDone(!done)\r\n        console.log(done)\r\n    }\r\n\r\n    const [ expand, setExpand ] = useState(false);\r\n    const handleExpand = () => {\r\n        setExpand(!expand)\r\n    }\r\n    // const changeColor = () => {\r\n    //     setButton(!button)\r\n    // }\r\n\r\n    // const changeState = (event) => {\r\n    //     let value = event.target.value;\r\n    //     if (event.target.name === 'complete') {\r\n    //         value = event.target.checked\r\n    //     }\r\n    //     setComplete({ [event.target.name]: value })\r\n    // }\r\n\r\n\r\n//state for changing bg color after tick(mark as done)\r\n    // const [color, setColor] = useState();\r\n    // const divStyle = { backgroundColor: color };\r\n\r\n//state for expanding list when ... clicked for details\r\n    // const [expandList, setExpandList] = useState('auto');\r\n    // const containerHeight = {height: expandList};\r\n\r\n    const handleToggle = () => {\r\n        task.done = !task.done;\r\n        console.log(task.done)\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <!-- Start of item row --> */}\r\n            <div className=\"row task-card\">\r\n                {/* <!-- icon column --> */}\r\n                <div className=\"col-1\">\r\n                    {/* <!-- icon --> */}\r\n                    <div className=\"mx-auto w-100 h-100\">\r\n                        {/* <button name=\"complete\" checked={complete} onChange={changeState} className={button ? \"buttonTrue\" : \"buttonFalse\"}\r\n                            onClick={changeColor}\r\n                        > */}\r\n                        {/* <button class=\"w-100\"  onClick={handleDone}> */}\r\n                            <i onClick={handleDone} className={done ? 'fas fa-check buttonTrue' : 'fas fa-check buttonFalse'}></i>\r\n\r\n                        {/* </button> */}\r\n                        {/* </button> */}\r\n                    </div>\r\n                    {/* <i className=\"fas fa-check task-icon\"></i> */}\r\n                </div>\r\n\r\n                {/* Start of Task column */}\r\n                <div className=\"col-10 task-description\" id=\"testing\">\r\n                    {/* <!-- Start of Task row --> */}\r\n                    <div className=\"row\">\r\n                        {/* <p name=\"name\" className={'task-title' + (complete ? ' complete ' : '')} onChange={changeState}> */}\r\n                        {/* Andison:<input name=\"name\" type=\"text\" class={'taskTitle' +(this.state.complete ? ' complete ' : '')} value={this.state.name} onChange={this.changeState} /> */}\r\n                        <p>\r\n                            {task.title}\r\n                        </p>\r\n                    </div>\r\n\r\n                    {/* Description row */}\r\n                    <div className=\"row\">\r\n                        <p className=\"text-secondary task-details\">\r\n                            {details.join(' â€§ ')}\r\n                        </p>\r\n                        \r\n                        <p onClick={handleExpand}>...</p>\r\n                        <p className={expand ? 'noteShowTrue' : 'noteShowFalse'}>{task.note}</p>\r\n                    </div>\r\n                    {/* <!-- End of Task column --> */}\r\n                </div>\r\n                {/* <!-- End of item row --> */}\r\n            </div>\r\n            </div>\r\n            )\r\n}"]},"metadata":{},"sourceType":"module"}