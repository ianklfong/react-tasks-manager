{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genhk\\\\OneDrive\\\\Desktop\\\\ellie's\\\\20220118\\\\react-tasks-manager\\\\task-manager\\\\src\\\\Components\\\\App\\\\App(Refactor).js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react'; // import Boostrap\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'; //import Components\n\nimport Welcome from '../Welcome/Welcome';\nimport NavigationBar from '../NavigationBar/NavigationBar(Refactor)';\nimport TaskList from '../TaskList/TaskList(Refactor)'; // import AddTask from '../AddTask/AddTask';\n// import AddTask from '../AddTask/AddTask(Refactor)';\n\nimport AddTask from '../AddTask/AddTask(Refactor)';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  // state of new task input\n  const [newTask, setNewTask] = useState({}); // inputing form\n\n  const handleChange = _ref => {\n    let {\n      target\n    } = _ref;\n    // insert corresponding name and input as porperty [name] & value in the newTask object\n    const {\n      name,\n      value\n    } = target;\n    setNewTask(prevNewTask => ({ ...prevNewTask,\n      [name]: value,\n      id: Date.now(),\n      done: false\n    }));\n  }; // state of right column\n\n\n  const [rightCol, setRightCol] = useState(true); //toggle right column status\n\n  const handleToggle = () => {\n    // if rightCol = true, then turn false, vice-versa\n    setRightCol(!rightCol);\n  }; // state of all task list\n\n\n  const [allTasks, setAllTasks] = useState([]); //submit task\n\n  const handleSubmit = event => {\n    // prevent default action\n    event.preventDefault(); // nothing happens if no title input\n\n    if (!newTask.title) {\n      alert('a');\n    } else {\n      return;\n    }\n\n    ; // shift new task in all tasks list (before previous task(s))\n\n    setAllTasks(prevAllTasks => [newTask, ...prevAllTasks]); // empty the value of newTask\n\n    setNewTask({}); // toggle right column display\n\n    setRightCol(!rightCol);\n  }; // render\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(NavigationBar, {\n        rightCol: rightCol,\n        handleToggle: handleToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"py-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-auto h-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row h-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6 d-none d-md-block\",\n            children: /*#__PURE__*/_jsxDEV(TaskList, {\n              allTasks: allTasks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: rightCol && /*#__PURE__*/_jsxDEV(AddTask, {\n              newTask: newTask,\n              handleSubmit: handleSubmit,\n              handleChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"nCGJEOcvr5KJCJPnCOof0z8uzso=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/genhk/OneDrive/Desktop/ellie's/20220118/react-tasks-manager/task-manager/src/Components/App/App(Refactor).js"],"names":["React","useState","Welcome","NavigationBar","TaskList","AddTask","App","newTask","setNewTask","handleChange","target","name","value","prevNewTask","id","Date","now","done","rightCol","setRightCol","handleToggle","allTasks","setAllTasks","handleSubmit","event","preventDefault","title","alert","prevAllTasks"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\n\r\n// import Boostrap\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\n//import Components\r\nimport Welcome from '../Welcome/Welcome';\r\nimport NavigationBar from '../NavigationBar/NavigationBar(Refactor)';\r\nimport TaskList from '../TaskList/TaskList(Refactor)';\r\n// import AddTask from '../AddTask/AddTask';\r\n// import AddTask from '../AddTask/AddTask(Refactor)';\r\nimport AddTask from '../AddTask/AddTask(Refactor)';\r\n\r\n\r\nexport default function App () {\r\n\r\n\t// state of new task input\r\n\tconst [newTask, setNewTask] = useState({});\r\n\r\n\t// inputing form\r\n\tconst handleChange = ({ target }) => {\r\n\t\t// insert corresponding name and input as porperty [name] & value in the newTask object\r\n\t\tconst { name, value } = target;\r\n\t\tsetNewTask((prevNewTask) => ({\r\n\t\t\t...prevNewTask,\r\n\t\t\t\t[name]: value,\r\n\t\t\t\tid: Date.now(),\r\n\t\t\t\tdone: false\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\t// state of right column\r\n\tconst [rightCol, setRightCol] = useState(true)\r\n\t\r\n\t//toggle right column status\r\n\tconst handleToggle = () => {\r\n\t\t// if rightCol = true, then turn false, vice-versa\r\n\t\tsetRightCol(!rightCol);\r\n\t}\r\n\t\r\n\t// state of all task list\r\n\tconst [allTasks, setAllTasks] = useState([])\r\n\r\n\t//submit task\r\n\tconst handleSubmit = (event) => {\r\n\t\t// prevent default action\r\n\t\tevent.preventDefault();\r\n\t\t// nothing happens if no title input\r\n\t\tif (!newTask.title) {\r\n\t\t\talert('a')\r\n\t\t} else {return};\r\n\t\t// shift new task in all tasks list (before previous task(s))\r\n\t\tsetAllTasks((prevAllTasks) => [\r\n\t\t\tnewTask,\r\n\t\t\t...prevAllTasks],\r\n\t\t);\r\n\t\t// empty the value of newTask\r\n\t\tsetNewTask({});\r\n\t\t// toggle right column display\r\n\t\tsetRightCol(!rightCol);\r\n\t}\r\n\r\n\t// render\r\n\treturn (\r\n\t\t<div className=\"App wrapper\">\r\n\t\t\t<header>\r\n\t\t\t\t{/* Start of Navigation Bar */}\r\n\t\t\t\t<NavigationBar rightCol={rightCol} handleToggle={handleToggle}/>\r\n\t\t\t\t{/* End of Navigation Bar */}\r\n\t\t\t</header>\r\n\r\n\t\t\t{/* Start of main container */}\r\n\t\t\t<main className=\"py-5\">\r\n\t\t\t\t<div className=\"mx-auto h-100\">\r\n\t\t\t\t{/* Start of main row */}\r\n\t\t\t\t\t<div className=\"row h-100\">\r\n\t\t\t\t\t\t{/* Start of left column */}\r\n\t\t\t\t\t\t<div className=\"col-md-6 d-none d-md-block\">\r\n\t\t\t\t\t\t\t{/* <Welcome /> */}\r\n\t\t\t\t\t\t\t<TaskList allTasks={allTasks}/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{/* End of left column */}\r\n\r\n\t\t\t\t\t\t{/* Start of right column */}\r\n\t\t\t\t\t\t<div className='col-md-6'>\r\n\t\t\t\t\t\t\t{rightCol && \r\n\t\t\t\t\t\t\t\t<AddTask\r\n\t\t\t\t\t\t\t\t\tnewTask={newTask}\r\n\t\t\t\t\t\t\t\t\thandleSubmit={handleSubmit}\r\n\t\t\t\t\t\t\t\t\thandleChange={handleChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/* End of right column */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}