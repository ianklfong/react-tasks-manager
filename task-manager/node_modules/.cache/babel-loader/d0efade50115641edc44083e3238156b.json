{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\genhk\\\\OneDrive\\\\Desktop\\\\ellie's\\\\taskm\\\\react-tasks-manager\\\\task-manager\\\\src\\\\db.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // //database\n\nimport { db } from './firebase-config';\nimport { collection, doc, getDocs, addDoc, deleteDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const testCollectionRef = collection(db, 'task');\nexport const listCollectionRef = collection(db, 'list');\nexport function Database() {\n  _s();\n\n  const [test, setTest] = useState([]);\n  const [newTitle, setNewTitle] = useState('');\n  const [newNotes, setNewNotes] = useState(''); //data retrieve\n\n  useEffect(() => {\n    const getTest = async () => {\n      const data = await getDocs(testCollectionRef);\n      setTest(data.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    };\n\n    getTest();\n  }, []); //sending data to db \n\n  const createTest = async () => {\n    await addDoc(testCollectionRef, {\n      title: newTitle,\n      notes: newNotes\n    });\n  }; //updating data\n  // const updateTest = async (id, dataWant2bUpdate) => {\n  //     const testDoc = doc(db, \"task\", id)\n  //     const newFields = {dataWant2bUpdate: previousData/newInput}\n  //     await updateDoc( testDoc, newFields)\n  // }\n  //delete data\n\n\n  const deleteTest = async id => {\n    const testDoc = doc(db, \"task\", id);\n    await deleteDoc(testDoc);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Database, \"1TxILa/vMfNlfZ3fX1Pr70EOtjs=\");\n\n_c = Database;\n\nvar _c;\n\n$RefreshReg$(_c, \"Database\");","map":{"version":3,"sources":["C:/Users/genhk/OneDrive/Desktop/ellie's/taskm/react-tasks-manager/task-manager/src/db.js"],"names":["React","useState","useEffect","db","collection","doc","getDocs","addDoc","deleteDoc","testCollectionRef","listCollectionRef","Database","test","setTest","newTitle","setNewTitle","newNotes","setNewNotes","getTest","data","docs","map","id","createTest","title","notes","deleteTest","testDoc"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,EAAT,QAAmB,mBAAnB;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,OAA1B,EAAmCC,MAAnC,EAA2CC,SAA3C,QAA4D,oBAA5D;;AAEA,OAAO,MAAMC,iBAAiB,GAAGL,UAAU,CAACD,EAAD,EAAK,MAAL,CAApC;AACP,OAAO,MAAMO,iBAAiB,GAAGN,UAAU,CAACD,EAAD,EAAK,MAAL,CAApC;AAEP,OAAO,SAASQ,QAAT,GAAoB;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC,CAHuB,CAKvB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,OAAO,GAAG,YAAY;AACxB,YAAMC,IAAI,GAAG,MAAMb,OAAO,CAACG,iBAAD,CAA1B;AACAI,MAAAA,OAAO,CAACM,IAAI,CAACC,IAAL,CAAUC,GAAV,CAAehB,GAAD,KAAU,EAAE,GAAGA,GAAG,CAACc,IAAJ,EAAL;AAAiBG,QAAAA,EAAE,EAAEjB,GAAG,CAACiB;AAAzB,OAAV,CAAd,CAAD,CAAP;AACH,KAHD;;AAKAJ,IAAAA,OAAO;AACV,GAPQ,EAON,EAPM,CAAT,CANuB,CAevB;;AACA,QAAMK,UAAU,GAAG,YAAY;AAC3B,UAAMhB,MAAM,CAACE,iBAAD,EAAoB;AAAEe,MAAAA,KAAK,EAAEV,QAAT;AAAmBW,MAAAA,KAAK,EAAET;AAA1B,KAApB,CAAZ;AACH,GAFD,CAhBuB,CAmBvB;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,QAAMU,UAAU,GAAG,MAAOJ,EAAP,IAAc;AAC7B,UAAMK,OAAO,GAAGtB,GAAG,CAACF,EAAD,EAAK,MAAL,EAAamB,EAAb,CAAnB;AACA,UAAMd,SAAS,CAACmB,OAAD,CAAf;AACH,GAHD;;AAKA,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAtCehB,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n// //database\r\nimport { db } from './firebase-config';\r\nimport { collection, doc, getDocs, addDoc, deleteDoc } from 'firebase/firestore'\r\n\r\nexport const testCollectionRef = collection(db, 'task')\r\nexport const listCollectionRef = collection(db, 'list')\r\n\r\nexport function Database() {\r\n    const [test, setTest] = useState([]);\r\n    const [newTitle, setNewTitle] = useState('')\r\n    const [newNotes, setNewNotes] = useState('')\r\n\r\n    //data retrieve\r\n    useEffect(() => {\r\n        const getTest = async () => {\r\n            const data = await getDocs(testCollectionRef);\r\n            setTest(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })))\r\n        }\r\n\r\n        getTest();\r\n    }, [])\r\n\r\n    //sending data to db \r\n    const createTest = async () => {\r\n        await addDoc(testCollectionRef, { title: newTitle, notes: newNotes });\r\n    }\r\n    //updating data\r\n    // const updateTest = async (id, dataWant2bUpdate) => {\r\n    //     const testDoc = doc(db, \"task\", id)\r\n    //     const newFields = {dataWant2bUpdate: previousData/newInput}\r\n    //     await updateDoc( testDoc, newFields)\r\n    // }\r\n\r\n    //delete data\r\n    const deleteTest = async (id) => {\r\n        const testDoc = doc(db, \"task\", id);\r\n        await deleteDoc(testDoc);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input>\r\n            </input>\r\n        </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}