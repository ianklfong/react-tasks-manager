import * as React from 'react';
export declare type IsPaneResizable = {
    x?: boolean;
    y?: boolean;
    xy?: boolean;
};
export declare type PaneSize = string | number;
export declare type PaneProps = {
    defaultSize?: {
        width?: PaneSize;
        height?: PaneSize;
    };
    size?: {
        width?: PaneSize;
        height?: PaneSize;
    };
    minWidth?: PaneSize;
    maxWidth?: PaneSize;
    minHeight?: PaneSize;
    maxHeight?: PaneSize;
    style?: React.CSSProperties;
    className?: string;
    children?: string | React.ReactNode;
    resizable?: IsPaneResizable;
    grid?: [number, number];
    onSizeChange?: () => void;
    [otherProps: string]: any;
};
export declare class Pane extends React.Component<PaneProps> {
    static defaultProps: {
        minWidth: number;
        minHeight: number;
        maxWidth: undefined;
        maxHeight: undefined;
        style: {};
        className: string;
        grid: number[];
        resizable: {
            x: boolean;
            y: boolean;
            xy: boolean;
        };
    };
    componentDidUpdate(prevProps: PaneProps): void;
    readonly createAllowedProps: PaneProps;
    render(): JSX.Element;
}
